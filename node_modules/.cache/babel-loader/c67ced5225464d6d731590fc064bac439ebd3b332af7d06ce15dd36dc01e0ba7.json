{"ast":null,"code":"var _jsxFileName = \"/Users/angelp/Documents/ReactJS/calculator/src/componenets/Calculator/Calculator.js\",\n  _s = $RefreshSig$();\nimport styles from './Calculator.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState('');\n  const [equal, setEqual] = useState(true);\n  const [addition, setAddition] = useState(false);\n  const [subtraction, setSubtraction] = useState(false);\n  const [muliplication, setMuliplication] = useState(false);\n  const [division, setDivision] = useState(false);\n  let result = '';\n  let newValue = null;\n  let isEmpty = true;\n  const clickHandler = e => {\n    //set User Input through buttons\n    setEnteredValue(enteredValue + e.target.innerHTML + '');\n\n    //Check if operation is included in the string.\n    checkOprand('+', setAddition);\n    checkOprand('-', setSubtraction);\n    checkOprand('X', setMuliplication);\n    checkOprand('รท', setDivision);\n  };\n  const checkOprand = (symbol, operand) => {\n    if (enteredValue.includes(symbol)) {\n      isEmpty = true;\n      setEqual(false);\n      operand(true);\n    }\n  };\n  if (enteredValue.includes('%')) {\n    newValue = enteredValue.replace('%', '');\n    result = parseFloat(newValue.split(' ')[0]) / 100;\n    setEnteredValue(result.toString());\n    isEmpty = false;\n  }\n  if (enteredValue.includes('=')) {\n    return setEnteredValue('');\n  }\n  if (enteredValue > 0) {\n    isEmpty = false;\n  } else if (enteredValue < -1) {\n    setEnteredValue(\"\");\n    return alert(\"This calculator does not allow negative numbers\");\n  }\n  const equalsHandler = () => {\n    if (addition !== false) {\n      newValue = enteredValue.replace('+', ' ');\n      result = parseInt(newValue.split(' ')[0]) + parseInt(newValue.split(' ')[1]);\n      isEmpty = false;\n    }\n    if (subtraction !== false) {\n      newValue = enteredValue.replace('-', ' ');\n      result = parseInt(newValue.split(' ')[0]) - parseInt(newValue.split(' ')[1]);\n      isEmpty = false;\n    }\n    if (muliplication !== false) {\n      newValue = enteredValue.replace('X', ' ');\n      result = parseInt(newValue.split(' ')[0]) * parseInt(newValue.split(' ')[1]);\n      isEmpty = false;\n    }\n    if (division !== false) {\n      newValue = enteredValue.replace('รท', ' ');\n      result = parseInt(newValue.split(' ')[0]) / parseInt(newValue.split(' ')[1]);\n      isEmpty = false;\n    }\n    setAddition(false);\n    setSubtraction(false);\n    setMuliplication(false);\n    setDivision(false);\n    return setEnteredValue(result.toString());\n  };\n  console.log(`Addition: ${addition}`);\n  console.log(`Subtraction: ${subtraction}`);\n  console.log(`Muliplication: ${muliplication}`);\n  console.log(`Division: ${division}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calculator,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: 0,\n      value: enteredValue,\n      onChange: clickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.parent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.NumColumn,\n          children: props.numOptions.map(obj => {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              clickHandler: clickHandler,\n              value: obj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.OperandsColumn,\n          children: props.operandsOptions.map(obj => {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              disabled: isEmpty,\n              clickHandler: e => clickHandler(e),\n              value: obj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: equal,\n      clickHandler: () => equalsHandler(),\n      value: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"Fe91PxrL7Wd2TiyZKw2dRtriy5k=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["styles","Button","Input","useState","jsxDEV","_jsxDEV","Calculator","props","_s","enteredValue","setEnteredValue","equal","setEqual","addition","setAddition","subtraction","setSubtraction","muliplication","setMuliplication","division","setDivision","result","newValue","isEmpty","clickHandler","e","target","innerHTML","checkOprand","symbol","operand","includes","replace","parseFloat","split","toString","alert","equalsHandler","parseInt","console","log","className","calculator","children","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","container","parent","NumColumn","numOptions","map","obj","OperandsColumn","operandsOptions","disabled","_c","$RefreshReg$"],"sources":["/Users/angelp/Documents/ReactJS/calculator/src/componenets/Calculator/Calculator.js"],"sourcesContent":["import styles from './Calculator.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../Input/Input';\nimport { useState } from 'react';\n\nconst Calculator = props => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [equal, setEqual] = useState(true);\n    const [addition, setAddition] = useState(false);\n    const [subtraction, setSubtraction] = useState(false);\n    const [muliplication, setMuliplication] = useState(false);\n    const [division, setDivision] = useState(false);\n\n    let result = '';\n    let newValue = null;\n    let isEmpty = true;\n\n    const clickHandler = (e) => {\n        //set User Input through buttons\n        setEnteredValue(enteredValue + e.target.innerHTML+'');\n      \n        //Check if operation is included in the string.\n        checkOprand('+', setAddition);\n        checkOprand('-', setSubtraction);\n        checkOprand('X', setMuliplication);\n        checkOprand('รท', setDivision);\n    }\n\n    const checkOprand = (symbol, operand) => {\n        if(enteredValue.includes(symbol)){\n            isEmpty = true;\n            setEqual(false);\n            operand(true)\n        }\n    }\n\n    if(enteredValue.includes('%')){\n        newValue = enteredValue.replace('%', '');\n        result = parseFloat(newValue.split(' ')[0]) / 100;\n        setEnteredValue(result.toString());\n        isEmpty = false;\n    }\n\n    if(enteredValue.includes('=')){\n        return setEnteredValue('');\n    }\n\n    if(enteredValue > 0){\n        isEmpty = false;\n    } else if(enteredValue < -1){\n        setEnteredValue(\"\");\n        return alert(\"This calculator does not allow negative numbers\")\n    }\n\n    const equalsHandler = () => {        \n        if(addition !== false){\n            newValue = enteredValue.replace('+', ' ');\n            result = parseInt(newValue.split(' ')[0]) + parseInt(newValue.split(' ')[1]);\n            isEmpty = false;\n        }\n    \n        if(subtraction !== false){\n            newValue = enteredValue.replace('-', ' ');\n            result = parseInt(newValue.split(' ')[0]) - parseInt(newValue.split(' ')[1]);\n            isEmpty = false;\n        }\n    \n        if(muliplication !== false){\n            newValue = enteredValue.replace('X', ' ');\n            result = parseInt(newValue.split(' ')[0]) * parseInt(newValue.split(' ')[1]);\n            isEmpty = false;\n        }\n    \n        if(division !== false){\n            newValue = enteredValue.replace('รท', ' ');\n            result = parseInt(newValue.split(' ')[0]) / parseInt(newValue.split(' ')[1]);\n            isEmpty = false;\n        }\n\n        setAddition(false);\n        setSubtraction(false);\n        setMuliplication(false);\n        setDivision(false);\n\n        return setEnteredValue(result.toString());\n    }\n\n    console.log(`Addition: ${addition}`);\n    console.log(`Subtraction: ${subtraction}`);\n    console.log(`Muliplication: ${muliplication}`);\n    console.log(`Division: ${division}`);\n\n    return (   \n    <div className={styles.calculator}>\n        <Input placeholder={0} value={enteredValue} onChange={clickHandler}/>\n\n        <div className={styles.container}>\n        <div className={styles.parent}>\n        <div className={styles.NumColumn}>            \n        {props.numOptions.map((obj) => {\n            return <Button clickHandler={clickHandler} value={obj}/>\n        })}\n        </div>\n        <div className={styles.OperandsColumn}>\n        {props.operandsOptions.map((obj) => {\n            return <Button disabled={isEmpty} clickHandler={(e) => clickHandler(e)} value={obj}/>\n        })}\n        </div>\n        </div>\n    </div>\n    <Button disabled={equal} clickHandler={() => equalsHandler()} value='='/>\n    </div>\n    )\n}\n\nexport default Calculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}